////////////////////////////////////////////////////////////
// Gradient with overload                                 //
// If not presented with start and stop colors or         //
// if start is equal to stop color just output background //
////////////////////////////////////////////////////////////

.gradient (@color: #F5F5F5, @start: #EEE, @stop: #FFF) when (iscolor(@start)) and (iscolor(@stop)) and not (@start = @stop) {
    background: @color;
    background: -webkit-gradient(linear,
                                 left bottom,
                                 left top,
                                 color-stop(0, @start),
                                 color-stop(1, @stop));
    background: -ms-linear-gradient(bottom,
                                    @start,
                                    @stop);
    background: -moz-linear-gradient(center bottom,
                                     @start 0%,
                                     @stop 100%);
    background: -o-linear-gradient(@stop,
                                 @start);
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(@stop),argb(@start)));
}

.gradient (@color: #F5F5F5, @start: #EEE, @stop: #FFF) when (default()) {
    background: @color;
}

.horizontal-gradient (@color: #F5F5F5, @start: #EEE, @stop: #FFF) when (iscolor(@start)) and (iscolor(@stop)) and not (@start = @stop) {
    background: @color;
    background: -webkit-gradient(linear,
                                 left top,
                                 right top,
                                 color-stop(0, @start),
                                 color-stop(1, @stop));
    background: -ms-linear-gradient(left,
                                    @start,
                                    @stop);
    background: -moz-linear-gradient(left center,
                                     @start 0%,
                                     @stop 100%);
    background: -o-linear-gradient(@stop,
                                 @start);
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(@stop),argb(@start)));
}

.horizontal-gradient (@color: #F5F5F5, @start: #EEE, @stop: #FFF) when (default()) {
    background: @color;
}

.opacity (@opacity: 0.5) {
    -moz-opacity: @opacity;
    -khtml-opacity: @opacity;
    -webkit-opacity: @opacity;
    opacity: @opacity;
    @opperc: (@opacity * 100);
    -ms-filter: ~"progid:DXImageTransform.Microsoft.Alpha(opacity=@{opperc})";
    filter: ~"alpha(opacity=@{opperc})";
}

.transition-duration (@duration: 0.2s) {
    -moz-transition-duration: @duration;
    -webkit-transition-duration: @duration;
    -o-transition-duration: @duration;
    transition-duration: @duration;
}

.transform (...) {
    -webkit-transform: @arguments;
    -moz-transform: @arguments;
    -o-transform: @arguments;
    -ms-transform: @arguments;
    transform: @arguments;
}

.transform-style (...) {
    -moz-transform-style:       @arguments;
    -webkit-transform-style:    @arguments;
    transform-style:            @arguments;
}

.transform-origin (...) {
    -webkit-transform-origin:   @arguments;
    -moz-transform-origin:      @arguments;
    -ms-transform-origin:       @arguments;
    -o-transform-origin:        @arguments;
    transform-origin:           @arguments;
}

.animation (...) {
    -webkit-animation: @arguments;
    -moz-animation:    @arguments;
    -ms-animation:     @arguments;
}

.rotation (@deg:5deg){
    .transform(rotate(@deg));
}

.perspective (...) {
    -moz-perspective:       @arguments;
    -webkit-perspective:    @arguments;
    perspective:            @arguments;
}

.scale (@ratio:1.5){
    .transform(scale(@ratio));
}

//////////////////////////////
// Transition with overload //
//////////////////////////////

// Shorthand with all @duration @ease
.transition (@duration:0.2s, @ease:ease-out) when (isnumber(@duration)) {
    -webkit-transition: all @duration @ease;
    -moz-transition: all @duration @ease;
    -o-transition: all @duration @ease;
    transition: all @duration @ease;
}

// Overload to allow for any value
.transition (@arguments) when (default()) {
    -webkit-transition: @arguments;
    -moz-transition: @arguments;
    -o-transition: @arguments;
    transition: @arguments;
}

.box-shadow (@arguments) {
    -webkit-box-shadow: @arguments;
    -moz-box-shadow: @arguments;
    box-shadow: @arguments;
}

.box-sizing (@sizing: border-box) {
    -ms-box-sizing: @sizing;
    -moz-box-sizing: @sizing;
    -webkit-box-sizing: @sizing;
    box-sizing: @sizing;
}

.user-select (@argument: none) {
    -webkit-user-select: @argument;
    -moz-user-select: @argument;
    -ms-user-select: @argument;
    user-select: @argument;
}

.translate (@x:0, @y:0) {
    .transform(translate(@x, @y));
}

.background-clip (@argument: padding-box) {
    -moz-background-clip: @argument;
    -webkit-background-clip: @argument;
    background-clip: @argument;
}

/////////////////////////////////////
// Border radius prefix-free mixin //
/////////////////////////////////////

.border-radius (@radius: 5px) {
    -webkit-border-radius: @radius;
    -moz-border-radius: @radius;
    -ms-border-radius: @radius;
    -o-border-radius: @radius;
    border-radius: @radius;
}

/////////////////////////////////////
// CSS3 columns prefix-free mixins //
/////////////////////////////////////

.column-count (...) {
    -webkit-column-count: @arguments;
    -moz-column-count: @arguments;
    column-count: @arguments;
}

.column-gap (...) {
    -webkit-column-gap: @arguments;
    -moz-column-gap: @arguments;
    column-gap: @arguments;
}

.column-width (...) {
    -webkit-column-width: @arguments;
    -moz-column-width: @arguments;
    column-width: @arguments;
}

.column-rule-color (...) {
    -webkit-column-rule-color: @arguments;
    -moz-column-rule-color: @arguments;
    column-rule-color: @arguments;
}

.column-rule-style (...) {
    -webkit-column-rule-style: @arguments;
    -moz-column-rule-style: @arguments;
    column-rule-style: @arguments;
}

.column-rule-width (...) {
    -webkit-column-rule-width: @arguments;
    -moz-column-rule-width: @arguments;
    column-rule-width: @arguments;
}

.column-span (...) {
    -webkit-column-span: @arguments;
    -moz-column-span: @arguments;
    column-span: @arguments;
}